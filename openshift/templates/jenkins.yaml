apiVersion: v1
kind: Template
metadata:
  creationTimestamp: null
  name: jenkins
parameters:
- name: GUID
  description: Unique GUID for tenant prefix
  required: true
- name: REPO
  description: Git repository URL
  required: true
- name: CLUSTER
  description: Cluster name for openshift
  required: true
- name: CUSTOM_JENKINS_HOSTNAME
  description: Set a custom hostname for jenkins route
  required: false
  value: ""
- description: The name of the OpenShift Service exposed for the Jenkins container.
  displayName: Jenkins Service Name
  name: JENKINS_SERVICE_NAME
  value: jenkins


- name: MEM_REQUESTS
  description: Requested memory for pod
  required: false
  value: 1Gi
- name: MEM_LIMITS
  description: Limit for pod memory
  required: false
  value: 2Gi
- name: CPU_REQUESTS
  description: Requested CPU for pod
  required: false
  value: 1000m
- name: CPU_LIMITS
  description: Limit for pod CPU
  required: false
  value: 2000m
- name: VOLUME_CAPACITY
  description: Capacity of persistent volume
  required: false
  value: 4G
- name: CUSTOM_NEXUS_HOSTNAME
  description: Set a custom hostname for Nexus route
  required: false
  value: ""


objects:
- apiVersion: v1
  kind: DeploymentConfig
  metadata:
    annotations:
      openshift.io/generated-by: OpenShiftNewApp
      template.alpha.openshift.io/wait-for-ready: "true"
    creationTimestamp: null
    generation: 5
    labels:
      app: jenkins-persistent
      template: jenkins-persistent-template
    name: jenkins
  spec:
    replicas: 1
    revisionHistoryLimit: 10
    selector:
      name: jenkins
    strategy:
      activeDeadlineSeconds: 21600
      recreateParams:
        timeoutSeconds: 600
      resources: {}
      type: Recreate
    template:
      metadata:
        annotations:
          openshift.io/generated-by: OpenShiftNewApp
        creationTimestamp: null
        labels:
          name: jenkins
      spec:
        containers:
        - env:
          - name: OPENSHIFT_ENABLE_OAUTH
            value: "true"
          - name: OPENSHIFT_ENABLE_REDIRECT_PROMPT
            value: "true"
          - name: KUBERNETES_MASTER
            value: https://kubernetes.default:443
          - name: KUBERNETES_TRUST_CERTIFICATES
            value: "true"
          - name: JENKINS_SERVICE_NAME
            value: jenkins
          - name: JNLP_SERVICE_NAME
            value: jenkins-jnlp
          image: registry.access.redhat.com/openshift3/jenkins-2-rhel7:latest
          imagePullPolicy: IfNotPresent
          livenessProbe:
            failureThreshold: 2
            httpGet:
              path: /login
              port: 8080
              scheme: HTTP
            initialDelaySeconds: 420
            periodSeconds: 360
            successThreshold: 1
            timeoutSeconds: 240
          name: jenkins
          readinessProbe:
            failureThreshold: 3
            httpGet:
              path: /login
              port: 8080
              scheme: HTTP
            initialDelaySeconds: 3
            periodSeconds: 10
            successThreshold: 1
            timeoutSeconds: 240
          resources:
            limits:
              cpu: ${CPU_LIMITS}
              memory: ${MEM_LIMITS}
            requests:
              cpu: ${CPU_REQUESTS}
              memory: ${MEM_REQUESTS}
          securityContext:
            capabilities: {}
            privileged: false
          terminationMessagePath: /dev/termination-log
          terminationMessagePolicy: File
          volumeMounts:
          - mountPath: /var/lib/jenkins
            name: jenkins-data
        dnsPolicy: ClusterFirst
        restartPolicy: Always
        schedulerName: default-scheduler
        securityContext: {}
        serviceAccount: jenkins
        serviceAccountName: jenkins
        terminationGracePeriodSeconds: 30
        volumes:
        - name: jenkins-data
          persistentVolumeClaim:
            claimName: jenkins
    test: false
    triggers:
    - imageChangeParams:
        automatic: true
        containerNames:
        - jenkins
        from:
          kind: ImageStreamTag
          name: jenkins:2
          namespace: openshift
      type: ImageChange
    - type: ConfigChange
  status: {}
 
- apiVersion: v1
  kind: Route
  metadata:
    annotations:
      haproxy.router.openshift.io/timeout: 4m
      openshift.io/generated-by: OpenShiftNewApp
      openshift.io/host.generated: "true"
      template.openshift.io/expose-uri: http://{.spec.host}{.spec.path}
    creationTimestamp: null
    labels:
      app: jenkins-persistent
      template: jenkins-persistent-template
    name: jenkins
  spec:
    host: ${CUSTOM_JENKINS_HOSTNAME}
    tls:
      insecureEdgeTerminationPolicy: Redirect
      termination: edge
    to:
      kind: Service
      name: jenkins
      weight: 100
    wildcardPolicy: None
- apiVersion: v1
  kind: Service
  metadata:
    annotations:
      openshift.io/generated-by: OpenShiftNewApp
      service.alpha.openshift.io/dependencies: '[{"name": "jenkins-jnlp", "namespace":
        "", "kind": "Service"}]'
      service.openshift.io/infrastructure: "true"
    creationTimestamp: null
    labels:
      app: jenkins-persistent
      template: jenkins-persistent-template
    name: jenkins
  spec:
    ports:
    - name: web
      port: 80
      protocol: TCP
      targetPort: 8080
    selector:
      name: jenkins
    sessionAffinity: None
    type: ClusterIP
  status:
    loadBalancer: {}
- apiVersion: v1
  kind: Service
  metadata:
    annotations:
      openshift.io/generated-by: OpenShiftNewApp
    creationTimestamp: null
    labels:
      app: jenkins-persistent
      template: jenkins-persistent-template
    name: jenkins-jnlp
  spec:
    ports:
    - name: agent
      port: 50000
      protocol: TCP
      targetPort: 50000
    selector:
      name: jenkins
    sessionAffinity: None
    type: ClusterIP
  status:
    loadBalancer: {}
- apiVersion: v1
  kind: PersistentVolumeClaim
  metadata:
    labels:
      app: jenkins-persistent
      template: jenkins-persistent-template
    name: jenkins
  spec:
    accessModes:
    - ReadWriteOnce
    resources:
      requests:
        storage: ${VOLUME_CAPACITY}
  status: {}
- apiVersion: v1
  kind: ServiceAccount
  metadata:
    annotations:
      serviceaccounts.openshift.io/oauth-redirectreference.jenkins: '{"kind":"OAuthRedirectReference","apiVersion":"v1","reference":{"kind":"Route","name":"${JENKINS_SERVICE_NAME}"}}'
    name: ${JENKINS_SERVICE_NAME}
- apiVersion: v1
  groupNames: null
  kind: RoleBinding
  metadata:
    name: ${JENKINS_SERVICE_NAME}_edit
  roleRef:
    name: edit
  subjects:
  - kind: ServiceAccount
    name: ${JENKINS_SERVICE_NAME}

- apiVersion: v1
  kind: BuildConfig
  metadata:
    annotations:
      openshift.io/generated-by: OpenShiftNewBuild
    creationTimestamp: null
    labels:
      build: jenkins-slave-appdev
    name: jenkins-slave-appdev
  spec:
    failedBuildsHistoryLimit: 5
    nodeSelector: null
    output:
      to:
        kind: ImageStreamTag
        name: jenkins-slave-appdev:latest
    postCommit: {}
    resources: {}
    runPolicy: Serial
    source:
      contextDir: openshift/jenkins_slave
      git:
        uri: ${REPO}
      type: Git
    strategy:
      dockerStrategy:
        from:
          kind: ImageStreamTag
          name: jenkins-slave-maven-centos7:latest
      type: Docker
    successfulBuildsHistoryLimit: 5
    triggers:
    - github:
        secret: Kzv1Du6myXh9T1s2i1cM
      type: GitHub
    - generic:
        secret: vLZ88aYsQMbHNl5Bq6Bb
      type: Generic
    - type: ConfigChange
    - imageChange: {}
      type: ImageChange
  status:
    lastVersion: 0
- apiVersion: v1
  kind: BuildConfig
  metadata:
    annotations:
      openshift.io/generated-by: OpenShiftNewBuild
    creationTimestamp: null
    labels:
      build: spring-boot-pipeline
    name: spring-boot-pipeline
  spec:
    nodeSelector: {}
    output: {}
    postCommit: {}
    resources: {}
    runPolicy: Serial
    source:
      contextDir: .
      git:
        ref: master
        uri: ${REPO}
      type: Git
    strategy:
      jenkinsPipelineStrategy:
        env:
        - name: CLUSTER
          value: ${CLUSTER}
        - name: GUID
          value: spring-boot
        jenkinsfilePath: Jenkinsfile
      type: JenkinsPipeline
    triggers: {}
 
- apiVersion: v1
  kind: ImageStream
  metadata:
    annotations:
      openshift.io/generated-by: OpenShiftNewBuild
    creationTimestamp: null
    generation: 1
    labels:
      build: jenkins-slave-appdev
    name: jenkins-slave-appdev
  spec:
    lookupPolicy:
      local: false
    tags:
    - annotations: null
      from:
        kind: DockerImage
        name: docker-registry.default.svc:5000/jenkins/jenkins-slave-appdev:latest
      generation: null
      importPolicy: {}
      name: latest
      referencePolicy:
        type: ""
  status:
    dockerImageRepository: ""
- apiVersion: v1
  kind: ImageStream
  metadata:
    annotations:
      openshift.io/generated-by: OpenShiftNewBuild
      openshift.io/image.dockerRepositoryCheck: 2018-10-09T14:16:38Z
    creationTimestamp: null
    generation: 2
    labels:
      build: jenkins-slave-appdev
    name: jenkins-slave-maven-centos7
  spec:
    dockerImageRepository: docker.io/openshift/jenkins-slave-maven-centos7
    lookupPolicy:
      local: false
    tags:
    - annotations:
        openshift.io/imported-from: docker.io/openshift/jenkins-slave-maven-centos7:latest
      from:
        kind: DockerImage
        name: docker.io/openshift/jenkins-slave-maven-centos7:latest
      generation: 2
      importPolicy: {}
      name: latest
      referencePolicy:
        type: Source
  status:
    dockerImageRepository: ""
